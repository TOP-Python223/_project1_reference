"""Дополнительный модуль: раздел помощи, строковые константы."""

# импорт дополнительных модулей
import data
import functions


# переменные модуля
H_RULES = f"""Правила игры
    Вы играете одним из двух символов: крестиком {data.TOKENS[0]!r} или ноликом {data.TOKENS[1]!r}. Чтобы победить, первым составьте последовательность из {data.DIM} своих символов в одной строке, в одном столбце, либо в одной диагонали.
"""
BOARD_COORDINATES = [[f'{i + 1} {j + 1}' for j in data.RANGE] for i in data.RANGE]
H_INTERFACE = f"""Интерфейс
    Игра предлагает вам интерфейс командной строки. Это означает, что для выполнения определённого действия в игре необходимо ввести команду и нажать Enter. В последнем разделе данной справки приведён список действий и соответствующих им команд, которые можно использовать в главном меню между партиями.

    Во время выполнения различных действий игра может запрашивать у вас дополнительные данные или задавать уточняющие вопросы. В таких случаях возможные варианты ввода перечисляются в скобках в конце строки с приглашением для ввода. Отсутствие перечисления вариантов ввода означает, что можно вводить любые данные: например, когда игра запрашивает имя игрока.  

    Во время партии игра ожидает от игрока(-ов) ввода координат клетки для текущего хода. Координаты вводятся через пробел в соответствии с примером ниже. Ввод пустой строки во время своего хода позволит вам сохранить незавершённую партию и вернуться в главное меню.
\n{functions.draw_boards(BOARD_COORDINATES, left_margin=6)}\n"""
H_COMMANDS = (
        "Команды\n"
        # формирует строку в виде таблицы, колонки разделяются двоеточиями, первая колонка выравнивается вправо, вторая колонка выравнивается влево, первая строка отделяется горизонтальной линией
        + ' ' * (4 + (mx_com_len := max(len(k) for k in data.COMMANDS)) - len(a := 'действие'))
        + a.title() + ": 'команда 1', 'команда 2', ...\n  "
        + '—' * (4 + mx_com_len + max(len(str(v)) for v in data.COMMANDS.values())) + '\n'
        + '\n'.join(' ' * (4 + mx_com_len - len(com))
                    + com.capitalize() + ": "
                    + ', '.join(repr(o) for o in opt)
                    for com, opt in data.COMMANDS.items()) + '\n\n'
)



def show_help() -> None:
    """Выводит в stdout раздел помощи."""
    # из глобального пространства имён данного модуля получает все объекты, чьи имена начинаются на 'H_'
    for chapter in (
            obj
            for name, obj in globals().items()
            if name.startswith('H_')
    ):
        title, message = (ch := chapter.split('\n', maxsplit=1))[0], ch[1]
        functions.show_title(title, center=False)
        print(message)



# тестирование функций модуля
if __name__ == '__main__':
    show_help()
